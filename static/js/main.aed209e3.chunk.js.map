{"version":3,"sources":["components/app-header/appHeader.js","components/search-post/searchPost.js","components/post-status-filter/postStatusFilter.js","components/post-list/post-list-item/postListItem.js","components/post-list/postList.js","components/post-add-form/postAddForm.js","components/app/app.js","index.js"],"names":["AppHeader","postsAmount","likedPosts","className","SearchPost","onValueChange","e","inputStr","target","value","props","onSearchStr","type","placeholder","onChange","this","Component","PostStatusFilter","onTogleLikedOnlyShow","onClick","PostListItem","label","important","liked","onTogleImportant","onTogleLike","onPostDelete","classNames","id","PostList","generateContentFromData","data","map","propsFromJsom","posts","content","PostAddForm","state","inputTxt","onValueChange_0__Example","setState","onSubmit","preventDefault","onPostAdd","App","maxId","showLikedPostsOnly","searchStr","togleStateArrParam","param","console","log","newElem","idx","findIndex","item","oldElem","slice","beforeArr","afterArr","boolParam","onSearchStateStrChange","str","showLikedPosts","filter","showPostsBySearchStr","indexOf","visiblePosts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aed209e3.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({postsAmount, likedPosts}) => {\r\n\r\n    return (\r\n        <div className = \"app-header d-flex\">\r\n            \r\n            <h1>John Doe</h1>\r\n            <h2> {postsAmount} records, from them {likedPosts} liked ones</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from \"react\";\r\n\r\nimport './search-posts.css';\r\n\r\nexport default class SearchPost extends Component {\r\n\r\n    onValueChange = (e) => {\r\n        const inputStr = e.target.value;\r\n        this.props.onSearchStr(inputStr);\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <input \r\n                 className=\"form-control search-input\" \r\n                 type=\"text\" \r\n                 placeholder='Type First letters of some of post words ...'\r\n                 onChange={ this.onValueChange }>\r\n    \r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nimport './post-status-filter.css'\r\n\r\nconst PostStatusFilter = ({onTogleLikedOnlyShow}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"d-flex align-items-center\">\r\n\r\n            <button onClick={ () => onTogleLikedOnlyShow(false) } type=\"button\" className=\"btn btn-info\">All Posts</button>\r\n            <button onClick={ () => onTogleLikedOnlyShow(true) } type=\"button\" className=\"btn btn-outline-secondary\">Liked Posts</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostStatusFilter;","import React, {Component} from \"react\";\r\n\r\nimport './post-list-item.css';\r\n\r\nconst PostListItem = ({label, important, liked, onTogleImportant, onTogleLike, onPostDelete, id}) => {\r\n\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if(important) { classNames = classNames + ' important' };\r\n    if(liked) { classNames = classNames + ' like' };\r\n\r\n\r\n    return (\r\n\r\n        <div className={classNames}>\r\n            \r\n            <span className=\"app-list-item-label\" onClick={ onTogleLike }>{label}</span>\r\n\r\n            <div className=\"d-flex justify-content-center allign-items-center\">\r\n                \r\n                <button type=\"button\" className=\"btn-star btn-small\" onClick={ onTogleImportant } >\r\n                    <i className=\"fa fa-star\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn-star btn-small\" onClick={ onPostDelete }>\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n                <i className=\"fa fa-heart\" ></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostListItem;","import React, {Component} from \"react\";\r\n\r\nimport PostListItem from \"./post-list-item/postListItem.js\";\r\n\r\nimport './post-list.css';\r\n\r\nexport default class PostList extends Component {\r\n\r\n    generateContentFromData = ( data ) => {\r\n        const {onTogleImportant, onTogleLike, onPostDelete} = this.props;\r\n\r\n        return data.map( ({ id , ...propsFromJsom}) => { // From item => Decomposed\r\n            return <li key={id} className=\"list-item\">\r\n\r\n                < PostListItem {...propsFromJsom} onTogleImportant={() => {onTogleImportant(id)}}\r\n                                                  onTogleLike={() => {onTogleLike(id)}} \r\n                                                  onPostDelete={() => {onPostDelete(id)}} />\r\n            </li>\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {posts} = this.props;\r\n        const content = this.generateContentFromData(posts);\r\n        \r\n\r\n        return (\r\n            <ul className=\"app-list list-group\">\r\n\r\n                {content}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n\r\n    state = {\r\n        inputTxt: ''\r\n    };\r\n\r\n    onValueChange_0__Example = (e) => {\r\n        this.setState( ({inputTxt}) => {\r\n            return { inputTxt: e.target.value }\r\n        })\r\n    }\r\n    onValueChange = (e) => {\r\n        this.setState({ inputTxt: e.target.value }); // IMMUTABLE !!!\r\n        //console.log( `PostAddForm Comp, onValueChange(), inputTxt: ${this.state.inputTxt}`);\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onPostAdd(this.state.inputTxt);\r\n        this.setState({ inputTxt: '' }); // IMMUTABLE !!!\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form   className='d-flex bottom-panel'\r\n                    onSubmit={this.onSubmit}>\r\n                \r\n                <input  className=\"form-control new-post-label\" \r\n                        placeholder=\"Input Your New Message ...\"\r\n                        type=\"text\"\r\n                        onChange={this.onValueChange}\r\n                        value={this.state.inputTxt} // CONTROLLED REACT COMP: State Improves on Comp\r\n                        \r\n                ></input>\r\n    \r\n                <button className='btn btn-outline-secondary' type=\"submit\">Send</button>\r\n    \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React , {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header/appHeader.js'\r\nimport SearchPost from '../search-post/searchPost.js'\r\nimport PostStatusFilter from '../post-status-filter/postStatusFilter.js'\r\nimport PostList from '../post-list/postList.js';\r\nimport PostAddForm from '../post-add-form/postAddForm.js';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        data: [\r\n            { label: 'Some Post 0', important: false,  liked: false,  id: 0 },\r\n            { label: 'Some Post 1', important: true, liked: false,  id: 1 },\r\n            { label: 'Some Post 1', important: true, liked: false,  id: 2 },\r\n            { label: 'Some Post 2', important: false, liked: true, id: 3 },\r\n            { label: 'Some Post 3', important: false, liked: true, id: 4 }\r\n        ],\r\n        maxId: 4,\r\n        showLikedPostsOnly: false,\r\n        searchStr: ''\r\n    }\r\n\r\n    togleStateArrParam = (param, id) => {\r\n        console.log(`ID of ${param} Post Toggled: ${id}`);\r\n        \r\n        this.setState( ({data}) => {\r\n            const idx = data.findIndex( item => item.id === id);\r\n\r\n            const oldElem = data[idx];\r\n\r\n            let newElem; // In Imperative Style —> ??? param: !oldElem.PARAM ???\r\n            if( param === 'important') { newElem = { ...oldElem, important: !oldElem.important}; }\r\n            else if( param === 'liked' ) { newElem = { ...oldElem, liked: !oldElem.liked}; }\r\n\r\n            const newArr = [ ...data.slice(0, idx), newElem, ...data.slice(idx + 1)];\r\n\r\n            return { data: newArr }; // IMMUTABLE\r\n        })\r\n    }\r\n\r\n    onTogleImportant = (id) => {\r\n        this.togleStateArrParam( 'important', id);\r\n    }\r\n\r\n    onTogleLike = (id) => {\r\n        this.togleStateArrParam( 'liked', id);\r\n    }\r\n\r\n    onPostDelete = (id) => {\r\n        console.log(`ID of DELETED Post: ${id}`);\r\n\r\n        this.setState( ({data}) => {\r\n            const idx = data.findIndex( item => item.id === id);\r\n\r\n            const beforeArr = [...data.slice(0, idx)];\r\n            const afterArr  = [...data.slice(idx + 1)];\r\n\r\n            const newArr = [ ...beforeArr, ...afterArr];\r\n\r\n            return { data: newArr }; // IMMUTABLE\r\n        })\r\n    }\r\n\r\n    onPostAdd = (label) => {\r\n        console.log(`App -> Label (Text) of Added Post: ${label}`);\r\n\r\n        this.setState( ({data}) => { \r\n            let {maxId} = this.state;\r\n            const newElem  = { label: `${label}`, important: false, liked: false, id: ++maxId };\r\n            const newArr = [ ...data, newElem];\r\n\r\n            return { data: newArr, maxId: ++maxId }; // IMMUTABLE\r\n        })\r\n    }\r\n\r\n    onTogleLikedOnlyShow = (boolParam) => {\r\n        this.setState( {showLikedPostsOnly: boolParam} );\r\n        console.log( `App -> showLikedPostsOnly: ${this.state.showLikedPostsOnly}`);\r\n    }\r\n\r\n    onSearchStateStrChange = (str) => {\r\n        this.setState( {searchStr: str} );\r\n        console.log( `App -> searchStr: ${this.state.searchStr}`);\r\n    }\r\n\r\n    showLikedPosts = (posts) => {\r\n        return posts.filter(item => item.liked)\r\n    }\r\n\r\n    showPostsBySearchStr = (posts, searchStr) => {\r\n        \r\n        return posts.filter((item) => { \r\n            return item.label.indexOf(searchStr) > -1 // !!!!! indexOf(searchStr) -> Finds Exactly What User Typed !!!!!\r\n                                                      // !!!!! And If We Didn't Find That ->  -1 Will Be returned\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {data, showLikedPostsOnly, searchStr} = this.state;\r\n        let visiblePosts = data;\r\n\r\n        if (showLikedPostsOnly) { // !!!!! LOGIC MISTAKE !!!!!  —>  render() -> setState()  &  setState() -> render()\r\n            visiblePosts = this.showLikedPosts(data);\r\n        }\r\n\r\n        if (searchStr !== '') { // OR: (searchStr.length === 0)\r\n            visiblePosts = this.showPostsBySearchStr(visiblePosts, searchStr);\r\n        }\r\n\r\n        const postsAmount = visiblePosts.length;\r\n        const likedPosts = visiblePosts.filter( item => item.liked).length;\r\n\r\n\r\n        return (\r\n           <div className=\"app\">\r\n               < AppHeader postsAmount={postsAmount} likedPosts={likedPosts} />\r\n               <div className=\"search-panel d-flex\">\r\n                    < SearchPost onSearchStr={this.onSearchStateStrChange} />\r\n                    < PostStatusFilter onTogleLikedOnlyShow={this.onTogleLikedOnlyShow} />\r\n               </div>\r\n                < PostList  posts={visiblePosts} \r\n                            onTogleImportant={this.onTogleImportant}\r\n                            onTogleLike={this.onTogleLike}\r\n                            onPostDelete={this.onPostDelete} />\r\n                < PostAddForm onPostAdd={this.onPostAdd} />\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app.js';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}